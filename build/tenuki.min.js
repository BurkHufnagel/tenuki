/*!
 * tenuki v0.1.0 (https://github.com/aprescott/tenuki.js)
 * Copyright Â© 2016 Adam Prescott.
 * Licensed under the MIT license.
 */
(function(t){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=t()}else if(typeof define==="function"&&define.amd){define([],t)}else{var e;if(typeof window!=="undefined"){e=window}else if(typeof global!=="undefined"){e=global}else if(typeof self!=="undefined"){e=self}else{e=this}e.tenuki=t()}})(function(){var t,e,r;return function i(t,e,r){function n(o,s){if(!e[o]){if(!t[o]){var u=typeof require=="function"&&require;if(!s&&u)return u(o,!0);if(a)return a(o,!0);var l=new Error("Cannot find module '"+o+"'");throw l.code="MODULE_NOT_FOUND",l}var c=e[o]={exports:{}};t[o][0].call(c.exports,function(e){var r=t[o][1][e];return n(r?r:e)},c,c.exports,i,t,e,r)}return e[o].exports}var a=typeof require=="function"&&require;for(var o=0;o<r.length;o++)n(r[o]);return n}({1:[function(t,e,r){"use strict";r.Game=t("./lib/game").default;r.utils=t("./lib/utils").default;r.Region=t("./lib/region").default;r.EyePoint=t("./lib/eye-point").default;r.Intersection=t("./lib/intersection").default},{"./lib/eye-point":4,"./lib/game":5,"./lib/intersection":6,"./lib/region":8,"./lib/utils":10}],2:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var i=function(){function t(t,e){var r=[];var i=true;var n=false;var a=undefined;try{for(var o=t[Symbol.iterator](),s;!(i=(s=o.next()).done);i=true){r.push(s.value);if(e&&r.length===e)break}}catch(u){n=true;a=u}finally{try{if(!i&&o["return"])o["return"]()}finally{if(n)throw a}}return r}return function(e,r){if(Array.isArray(e)){return e}else if(Symbol.iterator in Object(e)){return t(e,r)}else{throw new TypeError("Invalid attempt to destructure non-iterable instance")}}}();var n=t("./utils");var a=u(n);var o=t("./intersection");var s=u(o);function u(t){return t&&t.__esModule?t:{"default":t}}var l=function c(t){var e=t.moveNumber;var r=t.playedPoint;var i=t.color;var n=t.pass;var a=t.intersections;var o=t.blackStonesCaptured;var s=t.whiteStonesCaptured;var u=t.capturedPositions;var l=t.koPoint;var c=t.boardSize;this.moveNumber=e;this.playedPoint=r;this.color=i;this.pass=n;this.intersections=a;this.blackStonesCaptured=o;this.whiteStonesCaptured=s;this.capturedPositions=u;this.koPoint=l;this.boardSize=c;Object.freeze(this)};l.prototype={_nextColor:function f(){if(this.color=="white"){return"black"}else{return"white"}},_capturesFrom:function d(t,e,r){var i=this;var n=this.neighborsFor(t,e).filter(function(t){return!t.isEmpty()&&t.value!=r&&i.libertiesAt(t.y,t.x)==1});var o=a.default.flatMap(n,function(t){return i.groupAt(t.y,t.x)});return a.default.unique(o)},_updateIntersection:function h(t,e,r){return e.map(function(e){if(e.y==t.y&&e.x==t.x){return new s.default(e.y,e.x,r)}else{return e}})},_removeIntersection:function v(t,e){return this._updateIntersection(t,e,"empty")},_withoutIntersectionsMatching:function p(t){var e=this.intersections.map(function(e){if(t(e)){return new s.default(e.y,e.x,"empty")}else{return e}});return this._withNewPoints(e)},_withNewPoints:function y(t){var e=new l({moveNumber:this.moveNumber,playedPoint:this.playedPoint,color:this.color,pass:this.pass,intersections:t,blackStonesCaptured:this.blackStonesCaptured,whiteStonesCaptured:this.whiteStonesCaptured,capturedPositions:this.capturedPositions,koPoint:this.koPoint,boardSize:this.boardSize});return e},playPass:function m(){var t=new l({moveNumber:this.moveNumber+1,playedPoint:null,color:this._nextColor(),pass:true,intersections:this.intersections,blackStonesCaptured:this.blackStonesCaptured,whiteStonesCaptured:this.whiteStonesCaptured,capturedPositions:[],koPoint:null,boardSize:this.boardSize});return t},playAt:function b(t,e){var r=this;var i=this._nextColor();var n=this._capturesFrom(t,e,i);var a=this.intersectionAt(t,e);var o=this.intersections;n.forEach(function(t){o=r._removeIntersection(t,o)});o=this._updateIntersection(a,o,i);var s=this.blackStonesCaptured+(i=="black"?0:n.length);var u=this.whiteStonesCaptured+(i=="white"?0:n.length);var c=this.boardSize;var f={moveNumber:this.moveNumber+1,playedPoint:a,color:i,pass:false,intersections:o,blackStonesCaptured:s,whiteStonesCaptured:u,capturedPositions:n,boardSize:c};var d=new l(f);var h=n.length==1&&d.groupAt(t,e).length==1&&d.inAtari(t,e);if(h){f["koPoint"]={y:n[0].y,x:n[0].x}}else{f["koPoint"]=null}return new l(f)},intersectionAt:function g(t,e){return this.intersections[t*this.boardSize+e]},groupAt:function S(t,e){var r=this.intersectionAt(t,e);var n=this.partitionTraverse(r,function(t){return t.sameColorAs(r)});var a=i(n,2);var o=a[0];var s=a[1];return o},libertiesAt:function E(t,e){var r=this;var i=this.intersectionAt(t,e);var n=a.default.flatMap(this.groupAt(i.y,i.x),function(t){return r.neighborsFor(t.y,t.x).filter(function(t){return t.isEmpty()})});return a.default.unique(n).length},inAtari:function x(t,e){return this.libertiesAt(t,e)==1},neighborsFor:function A(t,e){var r=[];if(e>0){r.push(this.intersectionAt(t,e-1))}if(e<this.boardSize-1){r.push(this.intersectionAt(t,e+1))}if(t>0){r.push(this.intersectionAt(t-1,e))}if(t<this.boardSize-1){r.push(this.intersectionAt(t+1,e))}return r},wouldBeSuicide:function _(t,e){var r=this;var i=this.intersectionAt(t,e);var n=i.isEmpty()&&this.neighborsFor(i.y,i.x).filter(function(t){return t.isEmpty()}).length==0;if(!n){return false}var a=this.neighborsFor(i.y,i.x).some(function(t){var e=r.inAtari(t.y,t.x);var i=t.isOccupiedWith(r._nextColor());return i&&!e});if(a){return false}var o=this.neighborsFor(i.y,i.x).some(function(t){var e=r.inAtari(t.y,t.x);var i=!t.isOccupiedWith(r._nextColor());return i&&e});if(o){return false}return true},partitionTraverse:function w(t,e){var r=[];var i=[];var n=[];n.push(t);while(n.length>0){var o=n.pop();if(r.indexOf(o)>-1){}else{r.push(o);this.neighborsFor(o.y,o.x).forEach(function(t){if(r.indexOf(t)>-1){}else{if(e(t)){n.push(t)}else{i.push(t)}}})}}return[r,a.default.unique(i)]}};l._initialFor=function(t,e){this._cache=this._cache||{};this._cache[t]=this._cache[t]||{};if(this._cache[t][e]){return this._cache[t][e]}var r=Array.apply(null,Array(t*t));r=r.map(function(e,r){return new s.default(Math.floor(r/t),r%t)});var i=t>11?3:2;var n={topRight:{y:i,x:t-i-1},bottomLeft:{y:t-i-1,x:i},bottomRight:{y:t-i-1,x:t-i-1},topLeft:{y:i,x:i},middle:{y:(t+1)/2-1,x:(t+1)/2-1},middleLeft:{y:(t+1)/2-1,x:i},middleRight:{y:(t+1)/2-1,x:t-i-1},middleTop:{y:i,x:(t+1)/2-1},middleBottom:{y:t-i-1,x:(t+1)/2-1}};var a={0:[],1:[],2:[n.topRight,n.bottomLeft],3:[n.topRight,n.bottomLeft,n.bottomRight],4:[n.topRight,n.bottomLeft,n.bottomRight,n.topLeft],5:[n.topRight,n.bottomLeft,n.bottomRight,n.topLeft,n.middle],6:[n.topRight,n.bottomLeft,n.bottomRight,n.topLeft,n.middleLeft,n.middleRight],7:[n.topRight,n.bottomLeft,n.bottomRight,n.topLeft,n.middleLeft,n.middleRight,n.middle],8:[n.topRight,n.bottomLeft,n.bottomRight,n.topLeft,n.middleLeft,n.middleRight,n.middleTop,n.middleBottom],9:[n.topRight,n.bottomLeft,n.bottomRight,n.topLeft,n.middleLeft,n.middleRight,n.middleTop,n.middleBottom,n.middle]};a[e].forEach(function(e){r[e.y*t+e.x]=new s.default(e.y,e.x,"black")});var o=new l({color:e>1?"black":"white",moveNumber:0,intersections:Object.freeze(r),blackStonesCaptured:0,whiteStonesCaptured:0,boardSize:t});this._cache[t][e]=o;return o};r.default=l},{"./intersection":6,"./utils":10}],3:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.default=o;var i=t("./utils");var n=a(i);function a(t){return t&&t.__esModule?t:{"default":t}}function o(t,e){this.INTERSECTION_GAP_SIZE=28;this.GUTTER_MARGIN=this.INTERSECTION_GAP_SIZE-3;this.BASE_MARGIN=this.INTERSECTION_GAP_SIZE-10;this.MARGIN=e.hasAttribute("data-include-coordinates")?this.BASE_MARGIN+this.GUTTER_MARGIN:this.BASE_MARGIN;this.game=t;this.boardElement=e;this.grid=[];this._touchEventFired=false;this.setup=function(){var t=this;var e=t.game;var r=this.boardElement;var i=n.default.createElement("div",{"class":"tenuki-inner-container"});t.innerContainer=i;n.default.appendElement(r,i);var a=n.default.createElement("div",{"class":"tenuki-zoom-container"});t.zoomContainer=a;n.default.appendElement(i,a);n.default.appendElement(a,n.default.createElement("div",{"class":"lines horizontal"}));n.default.appendElement(a,n.default.createElement("div",{"class":"lines vertical"}));n.default.appendElement(a,n.default.createElement("div",{"class":"hoshi-points"}));n.default.appendElement(a,n.default.createElement("div",{"class":"intersections"}));t.cancelZoomElement=n.default.createElement("div",{"class":"cancel-zoom"});var o=n.default.createElement("div",{"class":"cancel-zoom-backdrop"});n.default.addEventListener(t.cancelZoomElement,"click",function(e){t.zoomOut()});n.default.addEventListener(o,"click",function(e){t.zoomOut()});n.default.appendElement(i,t.cancelZoomElement);n.default.appendElement(i,o);if(e.boardSize<7){if(e.boardSize>1&&e.boardSize%2==1){var s=n.default.createElement("div",{"class":"hoshi"});s.style.top="calc("+t.MARGIN+"px + "+(e.boardSize-1)/2+"* "+(t.INTERSECTION_GAP_SIZE+1)+"px - 2px)";s.style.left=s.style.top;n.default.appendElement(r.querySelector(".hoshi-points"),s)}else{}}else{var u=e.boardSize>11?3:2;for(var l=0;l<3;l++){for(var c=0;c<3;c++){if((e.boardSize==7||e.boardSize%2==0)&&(l==1||c==1)){continue}var f=n.default.createElement("div",{"class":"hoshi"});if(l==0){f.style.top="calc("+t.MARGIN+"px + "+u+"* "+(t.INTERSECTION_GAP_SIZE+1)+"px - 2px)"}if(l==1){f.style.top="calc("+t.MARGIN+"px + "+((e.boardSize+1)/2-1)+"* "+(t.INTERSECTION_GAP_SIZE+1)+"px - 2px)"}if(l==2){f.style.top="calc("+t.MARGIN+"px + "+(e.boardSize-u-1)+"* "+(t.INTERSECTION_GAP_SIZE+1)+"px - 2px)"}if(c==0){f.style.left="calc("+t.MARGIN+"px + "+u+"* "+(t.INTERSECTION_GAP_SIZE+1)+"px - 2px)"}if(c==1){f.style.left="calc("+t.MARGIN+"px + "+((e.boardSize+1)/2-1)+"* "+(t.INTERSECTION_GAP_SIZE+1)+"px - 2px)"}if(c==2){f.style.left="calc("+t.MARGIN+"px + "+(e.boardSize-u-1)+"* "+(t.INTERSECTION_GAP_SIZE+1)+"px - 2px)"}n.default.appendElement(r.querySelector(".hoshi-points"),f)}}}for(var d=0;d<e.boardSize;d++){var h=n.default.createElement("div",{"class":"line horizontal"});h.setAttribute("data-left-gutter",e.yCoordinateFor(d));n.default.appendElement(r.querySelector(".lines.horizontal"),h);var v=n.default.createElement("div",{"class":"line vertical"});v.setAttribute("data-top-gutter",e.xCoordinateFor(d));n.default.appendElement(r.querySelector(".lines.vertical"),v);for(var p=0;p<e.boardSize;p++){var y=n.default.createElement("div",{"class":"intersection empty"});var m=n.default.createElement("div",{"class":"highlight"});n.default.appendElement(y,m);y.setAttribute("data-position-x",p);y.setAttribute("data-position-y",d);y.game=e;y.style.left=p*(t.INTERSECTION_GAP_SIZE+1)+"px";y.style.top=d*(t.INTERSECTION_GAP_SIZE+1)+"px";n.default.appendElement(r.querySelector(".intersections"),y);t.grid[d]||(t.grid[d]=[]);t.grid[d][p]=y}}n.default.addEventListener(r.querySelector(".lines.horizontal"),"mousedown",function(t){t.preventDefault()});n.default.addEventListener(r.querySelector(".lines.vertical"),"mousedown",function(t){t.preventDefault()});r.querySelector(".lines.horizontal").style.width=t.INTERSECTION_GAP_SIZE*(e.boardSize-1)+e.boardSize*1+"px";r.querySelector(".lines.horizontal").style.height=t.INTERSECTION_GAP_SIZE*(e.boardSize-1)+e.boardSize*1+"px";r.querySelector(".lines.vertical").style.width=t.INTERSECTION_GAP_SIZE*(e.boardSize-1)+e.boardSize*1+"px";r.querySelector(".lines.vertical").style.height=t.INTERSECTION_GAP_SIZE*(e.boardSize-1)+e.boardSize*1+"px";var b=t.INTERSECTION_GAP_SIZE*(e.boardSize-1)+e.boardSize*1+t.MARGIN*2;var g=t.INTERSECTION_GAP_SIZE*(e.boardSize-1)+e.boardSize*1+t.MARGIN*2;i.style.width=b+"px";i.style.height=g+"px";a.style.width=b+"px";a.style.height=g+"px";n.default.flatten(t.grid).forEach(function(r){n.default.addEventListener(r,"touchstart",function(){t._touchEventFired=true});n.default.addEventListener(r,"mouseenter",function(){var t=this;n.default.addClass(t,"hovered")});n.default.addEventListener(r,"mouseleave",function(){var t=this;n.default.removeClass(t,"hovered");e.renderer.resetTouchedPoint()});n.default.addEventListener(r,"click",function(){var r=this;var i=Number(r.getAttribute("data-position-y"));var n=Number(r.getAttribute("data-position-x"));var a=function o(){if(e.isOver()){e.toggleDeadAt(i,n)}else{e.playAt(i,n)}};if(!t._touchEventFired||document.body.clientWidth/window.innerWidth>1||e.isOver()){a();return}if(t.touchedPoint){if(r==t.touchedPoint){a()}else{t.showPossibleMoveAt(r)}}else{t.showPossibleMoveAt(r)}})});var S=i.parentNode.clientWidth/i.clientWidth;var E=i.parentNode.clientHeight/i.clientHeight;var x=Math.min(S,E);if(x>0&&x<1){n.default.addClass(r,"tenuki-scaled");i.style["transform-origin"]="top left";i.style.transform="scale3d("+x+", "+x+", 1)";r.style.width=i.getBoundingClientRect().width+"px";r.style.height=i.getBoundingClientRect().height+"px"}n.default.addEventListener(r,"touchstart",function(e){if(e.touches.length>1){return}if(!n.default.hasClass(r,"tenuki-zoomed")){return}var i=e.changedTouches[0].clientX;var o=e.changedTouches[0].clientY;t.dragStartX=i-this.offsetLeft;t.dragStartY=o-this.offsetTop;a.style.transition="none"});n.default.addEventListener(i,"touchend",function(e){if(e.touches.length>1){return}if(!n.default.hasClass(r,"tenuki-zoomed")){return}a.style.transition="";if(!t.moveInProgress){return}t.translateY=t.lastTranslateY;t.translateX=t.lastTranslateX;t.moveInProgress=false});n.default.addEventListener(i,"touchmove",function(e){if(e.touches.length>1){return}if(!n.default.hasClass(r,"tenuki-zoomed")){return true}e.preventDefault();t.moveInProgress=true;var o=e.changedTouches[0].clientX;var s=e.changedTouches[0].clientY;var u=o-t.dragStartX;var l=s-t.dragStartY;var c=t.translateY+l/2.5;var f=t.translateX+u/2.5;if(c>.5*i.clientHeight-t.MARGIN){c=.5*i.clientHeight-t.MARGIN}if(f>.5*i.clientWidth-t.MARGIN){f=.5*i.clientWidth-t.MARGIN}if(c<-.5*i.clientHeight+t.MARGIN){c=-.5*i.clientHeight+t.MARGIN}if(f<-.5*i.clientWidth+t.MARGIN){f=-.5*i.clientWidth+t.MARGIN}a.style.transform="translate3d("+2.5*f+"px, "+2.5*c+"px, 0) scale3d(2.5, 2.5, 1)";t.lastTranslateX=f;t.lastTranslateY=c})};this.showPossibleMoveAt=function(t){var e=this;var r=this.boardElement;var i=this.innerContainer;var a=this.zoomContainer;e.touchedPoint=t;if(n.default.hasClass(r,"tenuki-scaled")){var o=t.offsetTop;var s=t.offsetLeft;var u=.5*a.clientHeight-o-e.MARGIN;var l=.5*a.clientWidth-s-e.MARGIN;a.style.transform="translate3d("+2.5*l+"px, "+2.5*u+"px, 0) scale3d(2.5, 2.5, 1)";e.translateY=u;e.translateX=l;n.default.addClass(e.cancelZoomElement,"visible");n.default.addClass(e.boardElement,"tenuki-zoomed")}};this.resetTouchedPoint=function(){var t=this;t.touchedPoint=null};this.zoomOut=function(){var t=this;var e=t.zoomContainer;this.resetTouchedPoint();e.style.transform="";e.style.transition="";t.dragStartX=null;t.dragStartY=null;t.translateY=null;t.translateX=null;t.lastTranslateX=null;t.lastTranslateY=null;n.default.removeClass(t.cancelZoomElement,"visible");n.default.removeClass(t.boardElement,"tenuki-zoomed")};this.render=function(){this.resetTouchedPoint();this.renderStonesPlayed();this.updateMarkerPoints();this.updateCurrentPlayer();if(this.game.isOver()){this.renderTerritory()}};this.renderStonesPlayed=function(){var t=this;var e=t.game;var r=e.boardState();var i=e.intersections();i.forEach(function(e){t.renderIntersection(e)})};this.updateMarkerPoints=function(){var t=this;var e=this.game;var r=e.boardState();if(!r){return}e.intersections().forEach(function(r){if(e.wouldBeSuicide(r.y,r.x)){n.default.addClass(t.grid[r.y][r.x],"suicide")}});if(r.koPoint){n.default.addClass(t.grid[r.koPoint.y][r.koPoint.x],"ko")}if(r.playedPoint){n.default.addClass(t.grid[r.playedPoint.y][r.playedPoint.x],"marker")}};this.updateCurrentPlayer=function(){var t=this.game;var r=t.boardState().color;n.default.removeClass(e,r+"-to-play");n.default.addClass(e,t.currentPlayer()+"-to-play");if(t.isOver()){n.default.removeClass(e,"black-to-play");n.default.removeClass(e,"white-to-play")}};this.renderIntersection=function(t){var e=this;var r=this.game;var i=e.grid[t.y][t.x];var n=["intersection"];if(t.isEmpty()){n.push("empty")}else{n.push("stone");if(t.isBlack()){n.push("black")}else{n.push("white")}}if(i.className!=n.join(" ")){i.className=n.join(" ")}};this.renderTerritory=function(){var t=this;var e=this.game;e.intersections().forEach(function(r){n.default.removeClass(t.grid[r.y][r.x],"territory-black");n.default.removeClass(t.grid[r.y][r.x],"territory-white");if(e.isDeadAt(r.y,r.x)){n.default.addClass(t.grid[r.y][r.x],"dead")}else{n.default.removeClass(t.grid[r.y][r.x],"dead")}});var r=e.territory();r.black.forEach(function(e){n.default.addClass(t.grid[e.y][e.x],"territory-black")});r.white.forEach(function(e){n.default.addClass(t.grid[e.y][e.x],"territory-white")})}}},{"./utils":10}],4:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var i=function n(t,e){this.boardState=t;this.intersection=e;Object.freeze(this)};i.prototype={diagonals:function a(){var t=this;var a=[];var e=[];var r=[];if(this.intersection.x>0){e.push(this.intersection.x-1)}if(this.intersection.x<this.boardState.boardSize-1){e.push(this.intersection.x+1)}if(this.intersection.y>0){r.push(this.intersection.y-1)}if(this.intersection.y<this.boardState.boardSize-1){r.push(this.intersection.y+1)}e.forEach(function(e){r.forEach(function(r){a.push(t.boardState.intersectionAt(r,e))})});return a},isFalse:function o(){if(!this.intersection.isEmpty()){return false}var t=this.diagonals();var e=t.length<=2;var r=this.neighbors();var i=r.filter(function(t){return!t.isEmpty()});if(e&&i.length<1){return false}if(!e&&i.length<2){return false}var n=t.filter(function(t){return!t.isEmpty()&&!t.sameColorAs(i[0])});if(e){return n.length>=1}else{return n.length>=2}},neighbors:function s(){return this.boardState.neighborsFor(this.intersection.y,this.intersection.x)},filledColor:function u(){if(!this.isFalse()){throw new Error("Attempting to find filled color for a non-false eye")}return this.neighbors()[0].value}};r.default=i},{}],5:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var i=t("./utils");var n=v(i);var a=t("./dom-renderer");var o=v(a);var s=t("./null-renderer");var u=v(s);var l=t("./intersection");var c=v(l);var f=t("./board-state");var d=v(f);var h=t("./rulesets");function v(t){return t&&t.__esModule?t:{"default":t}}var p=function y(t){this._defaultBoardSize=19;this.boardSize=null;this._moves=[];this.renderer=t?new o.default(this,t):new u.default;this.callbacks={postRender:function e(){}};this._deadPoints=[];this._defaultRuleset="territory"};p.prototype={_configureOptions:function m(){var t=arguments.length<=0||arguments[0]===undefined?{}:arguments[0];var e=t.boardSize;var r=e===undefined?this._defaultBoardSize:e;var i=t.handicapStones;var n=i===undefined?0:i;var a=t.ruleset;var o=a===undefined?this._defaultRuleset:a;if(n>0&&r!=9&&r!=13&&r!=19){throw new Error("Handicap stones not supported on sizes other than 9x9, 13x13 and 19x19")}if(n<0||n==1||n>9){throw new Error("Only 2 to 9 handicap stones are supported")}this.boardSize=r;this.handicapStones=n;this.ruleset={area:h.AreaRules,territory:h.TerritoryRules}[o];if(!this.ruleset){throw new Error("Unknown ruleset: "+o)}},setup:function b(t){this._configureOptions(t);if(this.boardSize>19){throw"cannot generate a board size greater than 19"}this.renderer.setup();this.render()},intersectionAt:function g(t,e){return this.boardState().intersectionAt(t,e)},intersections:function S(){return this.boardState().intersections},yCoordinateFor:function E(t){return this.boardSize-t},xCoordinateFor:function x(t){var e=["A","B","C","D","E","F","G","H","J","K","L","M","N","O","P","Q","R","S","T"];return e[t]},coordinatesFor:function A(t,e){return this.xCoordinateFor(e)+this.yCoordinateFor(t)},currentPlayer:function _(){return this.boardState()._nextColor()},playAt:function w(t,e){if(this.isIllegalAt(t,e)){return false}this._moves.push(this.boardState().playAt(t,e));this.render();return true},boardState:function C(){return this._moves[this._moves.length-1]||d.default._initialFor(this.boardSize,this.handicapStones)},isWhitePlaying:function I(){return this.currentPlayer()=="white"},isBlackPlaying:function P(){return this.currentPlayer()=="black"},inAtari:function N(t,e){return this.boardState().inAtari(t,e)},wouldBeSuicide:function R(t,e){return this.boardState().wouldBeSuicide(t,e)},pass:function T(){if(!this.isOver()){this._moves.push(this.boardState().playPass());this.render()}},isOver:function z(){if(this._moves.length<2){return false}var t=this.boardState();var e=this._moves[this._moves.length-2];return t.pass&&e.pass},toggleDeadAt:function k(t,e){var r=this;var i=this.isDeadAt(t,e);this.groupAt(t,e).forEach(function(t){if(i){r._deadPoints=r._deadPoints.filter(function(e){return!(e.y==t.y&&e.x==t.x)})}else{r._deadPoints.push({y:t.y,x:t.x})}});this.render()},isDeadAt:function O(t,e){return this._deadPoints.some(function(r){return r.y==t&&r.x==e})},score:function M(){return this.ruleset.score(this)},libertiesAt:function G(t,e){return this.boardState().libertiesAt(t,e)},groupAt:function F(t,e){return this.boardState().groupAt(t,e)},neighborsFor:function L(t,e){return this.boardState().neighborsFor(t,e)},isIllegalAt:function B(t,e){if(this._moves.length==0){return false}return this.ruleset.isIllegal(t,e,this.boardState())},render:function q(){var t=this.boardState();if(!this.isOver()){this.removeScoringState()}this.renderer.render();this.callbacks.postRender(this)},removeScoringState:function Z(){this._deadPoints=[]},territory:function j(){if(!this.isOver()){return}return this.ruleset.territory(this)},undo:function W(){this._moves.pop();this.render()}};r.default=p},{"./board-state":2,"./dom-renderer":3,"./intersection":6,"./null-renderer":7,"./rulesets":9,"./utils":10}],6:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var i=function n(t,e,r){this.y=t;this.x=e;this.value=r||"empty";Object.freeze(this)};i.prototype={isOccupiedWith:function a(t){if(this.isEmpty()){return false}return this.value===t},isBlack:function o(){return this.value==="black"},isWhite:function s(){return this.value==="white"},isEmpty:function u(){return this.value==="empty"},sameColorAs:function l(t){return this.value===t.value}};r.default=i},{}],7:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.default=i;function i(){this.setup=function(){};this.render=function(){}}},{}],8:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});var i=function(){function t(t,e){var r=[];var i=true;var n=false;var a=undefined;try{for(var o=t[Symbol.iterator](),s;!(i=(s=o.next()).done);i=true){r.push(s.value);if(e&&r.length===e)break}}catch(u){n=true;a=u}finally{try{if(!i&&o["return"])o["return"]()}finally{if(n)throw a}}return r}return function(e,r){if(Array.isArray(e)){return e}else if(Symbol.iterator in Object(e)){return t(e,r)}else{throw new TypeError("Invalid attempt to destructure non-iterable instance")}}}();var n=t("./utils");var a=u(n);var o=t("./eye-point");var s=u(o);function u(t){return t&&t.__esModule?t:{"default":t}}var l=function c(t,e){this.boardState=t;this.intersections=e;Object.freeze(this)};l._startingAt=function(t,e,r){var n=t.intersectionAt(e,r);var a=t.partitionTraverse(n,function(t){return t.sameColorAs(n)});var o=i(a,2);var s=o[0];var u=o[1];return[s,u]};l.allFor=function(t){var e=t.intersections.map(function(t){return t});var r=[];var n=[];var a=function o(){var a=e.pop();if(r.indexOf(a)>-1){}else{(function(){var o=t.partitionTraverse(a,function(t){return t.sameColorAs(a)});var s=i(o,2);var u=s[0];var c=s[1];n.push(new l(t,u));r=r.concat(u);e=e.filter(function(t){return u.indexOf(t)<0})})()}};while(e.length>0){a()}return n};l.merge=function(t,e){var r=[e];var i=-1;while(r.length!=i){i=r.length;r=t.filter(function(t){return t.isEmpty()&&t.isTerritory()&&t.territoryColor()==e.territoryColor()&&t.expandedBoundaryStones().some(function(t){return r.some(function(e){return e.expandedBoundaryStones().indexOf(t)>-1})})})}return r};l.prototype={isEmpty:function f(){return this.intersections[0].isEmpty()},isTerritory:function d(){var t=this.intersections[0];if(!t.isEmpty()){return false}var e=l._startingAt(this.boardState,t.y,t.x);var r=i(e,2);var n=r[0];var o=r[1];var s=a.default.unique(o.map(function(t){return t.value}));var d=s.length==1&&s[0]!="empty";return d},territoryColor:function h(){var t=this.intersections[0];var e=l._startingAt(this.boardState,t.y,t.x);var r=i(e,2);var n=r[0];var o=r[1];var s=a.default.unique(o.map(function(t){return t.value}));var u=s.length==1&&s[0]!="empty";if(!t.isEmpty()||!u){throw new Error("Attempted to obtain territory color for something that isn't territory, region containing "+t.y+","+t.x)}else{return s[0]}},isBlack:function v(){return this.territoryColor()=="black"},isWhite:function p(){return this.territoryColor()=="white"},isNeutral:function y(){return!this.intersections[0].isBlack()&&!this.intersections[0].isWhite()&&!this.isTerritory()},exterior:function m(){var t=this;return this.boardState.intersections.filter(function(e){return t.intersections.indexOf(e)<0&&t.boardState.neighborsFor(e.y,e.x).some(function(e){return t.intersections.indexOf(e)>-1})})},boundaryStones:function b(){var t=this;if(!this.isEmpty()){throw new Error("Attempted to obtain boundary stones for non-empty region")}return this.exterior().filter(function(e){return!e.sameColorAs(t.intersections[0])})},expandedBoundaryStones:function g(){var t=this.boundaryStones();var e=l.allFor(this.boardState).filter(function(e){return e.intersections.some(function(e){return t.indexOf(e)>-1})});return a.default.flatMap(e,function(t){return t.intersections})},lengthOfTerritoryBoundary:function S(){var t=this;var e=this.intersections.filter(function(e){return e.y==0||e.y==t.boardState.boardSize-1||e.x==0||e.x==t.boardState.boardSize-1});var r=this.intersections.filter(function(e){return e.y%(t.boardState.boardSize-1)==0&&e.x%(t.boardState.boardSize-1)==0});return this.boundaryStones().length+e.length+r.length},containsSquareFour:function E(){var t=this;return this.intersections.some(function(e){return[[0,0],[0,1],[1,0],[1,1]].every(function(r){var n=i(r,2);var a=n[0];var o=n[1];var s=t.boardState.intersectionAt(e.y+a,e.x+o);return typeof s!="undefined"&&s.sameColorAs(e)})})},containsCurvedFour:function x(){var t=this;return this.intersections.some(function(e){return[[[0,0],[1,0],[2,0],[2,1]],[[-1,2],[0,0],[0,1],[0,2]],[[0,0],[0,1],[1,1],[2,1]],[[-1,0],[-1,1],[-1,2],[0,0]],[[-2,1],[-1,1],[0,0],[0,1]],[[0,0],[1,0],[1,1],[1,2]],[[0,-1],[0,0],[1,-1],[2,-1]],[[-1,-2],[-1,-1],[-1,0],[0,0]]].some(function(r){return r.every(function(r){var n=i(r,2);var a=n[0];var o=n[1];var s=t.boardState.intersectionAt(e.y+a,e.x+o);return typeof s!="undefined"&&s.sameColorAs(e)})})})},numberOfEyes:function A(){if(!this.intersections[0].isEmpty()){throw new Error("Unexpected calculation of number of eyes for a non-empty region containing "+this.intersections[0].y+","+this.intersections[0].x)}var t=this.lengthOfTerritoryBoundary();if(t<2){throw new Error("Unexpected boundary length of "+t+" for region including "+this.intersections[0].y+","+this.intersections[0].x)}if(t>=10){return 2}var e=void 0;switch(t){case 2:case 3:case 4:case 5:case 6:e=1;break;case 7:e=1.5;break;case 8:if(this.containsSquareFour()){e=1}else if(this.containsCurvedFour()){e=2}else{e=1.5}break;case 9:if(this.containsSquareFour()){e=1.5}else{e=2}break;default:throw new Error("unhandled boundary length "+t)}return e}};r.default=l},{"./eye-point":4,"./utils":10}],9:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.AreaRules=r.TerritoryRules=undefined;var i=t("./utils");var n=h(i);var a=t("./board-state");var o=h(a);var s=t("./intersection");var u=h(s);var l=t("./region");var c=h(l);var f=t("./eye-point");var d=h(f);function h(t){return t&&t.__esModule?t:{"default":t}}var v=function g(t){return t.boardState()._withoutIntersectionsMatching(function(e){return t.isDeadAt(e.y,e.x)})};var p=function S(t){var e=c.default.allFor(t);var r=e.filter(function(t){return t.isNeutral()});if(e.length==0||r.length==0){return t}var i={};r.forEach(function(t){var e=null;var r=null;t.intersections.forEach(function(t){e=e||t.x;e=e||t.y;var n=Math.abs(t.y-r)+Math.abs(t.x-e);var a=["black","white"][n%2];var o=new u.default(t.y,t.x,a);i[t.y]=i[t.y]||[];i[t.y][t.x]=o})});var n=t.intersections.map(function(t){if(i[t.y]&&i[t.y][t.x]){return i[t.y][t.x]}else{return t}});return t._withNewPoints(n)};var y=function E(t){var e=c.default.allFor(t).filter(function(t){return t.isTerritory()});var r=n.default.flatMap(e,function(t){return t.intersections}).filter(function(e){return new d.default(t,e).isFalse()});var i=r.filter(function(e){return t.neighborsFor(e.y,e.x).some(function(e){return t.inAtari(e.y,e.x)})});var a=t;var o=function s(){var t=a.intersections.map(function(t){if(i.indexOf(t)>-1){return new u.default(t.y,t.x,new d.default(a,t).filledColor())}else{return t}});a=a._withNewPoints(t);var e=p(a);var r=c.default.allFor(e).filter(function(t){return t.isTerritory()});var o=n.default.flatMap(r,function(t){return t.intersections}).filter(function(t){return new d.default(e,t).isFalse()});i=o.filter(function(t){return a.neighborsFor(t.y,t.x).some(function(t){return a.inAtari(t.y,t.x)})})};while(i.length>0){o()}return a};var m=Object.freeze({isIllegal:function x(t,e,r){var i=r.intersectionAt(t,e);var n=i.isEmpty();var a=r.wouldBeSuicide(t,e);var o=r.koPoint;var s=o&&o.y==t&&o.x==e;return!n||s||a},score:function A(t){var e=t._deadPoints.filter(function(e){return t.intersectionAt(e.y,e.x).isBlack()});var r=t._deadPoints.filter(function(e){return t.intersectionAt(e.y,e.x).isWhite()});var i=t.territory();var n=t.boardState();return{black:i.black.length+n.whiteStonesCaptured+r.length,white:i.white.length+n.blackStonesCaptured+e.length}},territory:function _(t){var e=v(t);var r=p(e);var i=y(r);var a=c.default.allFor(i).filter(function(t){return t.isTerritory()});var o=a.filter(function(t){var e=c.default.merge(a,t);var r=e.map(function(t){return Math.ceil(t.numberOfEyes())});return r.length>0&&r.reduce(function(t,e){return t+e})>=2});var s=o.filter(function(t){return t.isBlack()});var u=o.filter(function(t){return t.isWhite()});return{black:n.default.flatMap(s,function(t){return t.intersections}).map(function(t){return{y:t.y,x:t.x}}),white:n.default.flatMap(u,function(t){return t.intersections}).map(function(t){return{y:t.y,x:t.x}})}}});var b=Object.freeze({isIllegal:m.isIllegal,score:function w(t){var e=t.intersections().filter(function(e){return e.isBlack()&&!t.isDeadAt(e.y,e.x)});var r=t.intersections().filter(function(e){return e.isWhite()&&!t.isDeadAt(e.y,e.x)});var i=t.territory();return{black:i.black.length+e.length,white:i.white.length+r.length}},territory:function C(t){var e=c.default.allFor(v(t));var r=e.filter(function(t){return t.isTerritory()});var i=r.filter(function(t){return t.isBlack()});var a=r.filter(function(t){return t.isWhite()});return{black:n.default.flatMap(i,function(t){return t.intersections}).map(function(t){return{y:t.y,x:t.x}}),white:n.default.flatMap(a,function(t){return t.intersections}).map(function(t){return{y:t.y,x:t.x}})}}});r.TerritoryRules=m;r.AreaRules=b},{"./board-state":2,"./eye-point":4,"./intersection":6,"./region":8,"./utils":10}],10:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:true});r.default={flatten:function i(t){return t.reduce(function(t,e){return t.concat(e)})},flatMap:function n(t,e){return Array.prototype.concat.apply([],t.map(e))},createElement:function a(t,e){var r=document.createElement(t);if(typeof e!="undefined"){if(e.class){r.className=e.class}}return r},appendElement:function o(t,e){t.insertBefore(e,null)},addEventListener:function s(t,e,r){t.addEventListener(e,r,false)},removeClass:function u(t,e){t.classList.remove(e)},addClass:function l(t,e){t.classList.add(e)},hasClass:function c(t,e){
return t.classList.contains(e)},toggleClass:function f(t,e){if(this.hasClass(t,e)){this.removeClass(t,e)}else{this.addClass(t,e)}},unique:function d(t){var d=[];t.forEach(function(t){if(d.indexOf(t)<0){d.push(t)}});return d}}},{}]},{},[1])(1)});
